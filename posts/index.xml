<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on My New Hugo Site</title><link>http://blog.evance.tw/posts/</link><description>Recent content in Posts on My New Hugo Site</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><lastBuildDate>Thu, 29 Sep 2022 00:26:59 +0800</lastBuildDate><atom:link href="http://blog.evance.tw/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Unifi Udr Loss Apps After Reformat Sd Card</title><link>http://blog.evance.tw/posts/2022/09/unifi-udr-loss-apps-after-reformat-sd-card/</link><pubDate>Thu, 29 Sep 2022 00:26:59 +0800</pubDate><guid>http://blog.evance.tw/posts/2022/09/unifi-udr-loss-apps-after-reformat-sd-card/</guid><description>
&lt;h2 id="versions">versions&lt;/h2>
&lt;ul>
&lt;li>UniFi OS UDR 2.5.11&lt;/li>
&lt;li>UniFi Network 7.2.94&lt;/li>
&lt;li>UniFi Protect 2.2.2&lt;/li>
&lt;/ul>
&lt;h2 id="context">context&lt;/h2>
&lt;p>由於 UDR 必須要安裝 SD 卡才能讓監視器隨時都錄影，買了張增你強&lt;del>的股票&lt;/del>代理的 SanDisk Extreme microSDXC card 256 GB，求的是代理商提供的終身保固。&lt;/p>
&lt;p>好不容易把 UDR 隨附的 SD 卡槽卸除工具從儲物間中翻出來，很輕鬆的卸除卡槽，但安裝 SD 卡時又遇到問題，卡片沒辦法整個平貼進卡槽，我也不敢太大力硬塞 SD 卡，擔心一個粗魯就讓終身保固掰了；最後是找到一個角度可以讓 SD 卡卡進卡槽 (會有ㄎㄚ一聲，請放心不是我的卡片斷掉)，成功將 SD 卡安裝進 UDR。&lt;/p>
&lt;p>安裝後 reboot 了 UDR (安裝文件沒特別說要 reboot)，之後想說來 format 一下 SD 卡好了，沒想到就帶來一連串的問題&amp;hellip;Orz&lt;/p>
&lt;h2 id="situation">situation&lt;/h2>
&lt;p>reboot 後，我是透過 iOS 的 Unifi Network app 來操作 console，進入方式為 Settings -&amp;gt; Console，接著會開啟內嵌瀏覽器，瀏覽器會打開 Console Management 的頁面。&lt;/p>
&lt;p>打開 Console Management 左邊的漢堡，進入 Storage 頁面後就可以看到 &lt;code>Reformat SD Card&lt;/code>，按下去後會有確認視窗，確定要刪除後，視窗還會到數 10 秒讓你有機會反悔。&lt;/p>
&lt;p>format 後，Network app 開始有異常的 reload 且無法正常操作，開啟 Protect app 也無法正常使用，找不到 Console，重新 scan 也無法正常找到 UDR。&lt;/p>
&lt;p>接著透過電腦連線至區網內的 Unifi Console，在 Updates 頁面發現 Network 跟 Protect 一直是 &lt;code>Stopped&lt;/code> 的狀態，點了 &lt;code>Start&lt;/code> 的按鈕也無效，app 無法正常啟動；嘗試透過網址訪問 Network app 也失敗。&lt;/p>
&lt;p>後來逛到 Storage 頁面，才發現 &lt;code>Reformat SD Card&lt;/code> 左邊的 &lt;code>Reformat Storage&lt;/code> 有個提示，游標 hover 上去會跳出對話框，內容是 &amp;ldquo;Reformatting will delete all data stored on this console&amp;rsquo;s hard disk drive(s).&amp;quot;，這時才驚覺，&lt;code>Reformat SD Card&lt;/code> 該不會是連同 UDR 內建 SSD 的資料一起砍了吧&amp;hellip;&lt;/p>
&lt;p>&lt;img src="http://blog.evance.tw/images/unifi-udr-loss-apps-after-reformat-sd-card/2022-09-29-01-44-04.png" alt="坑人的提示">&lt;/p>
&lt;h2 id="solution">solution&lt;/h2>
&lt;p>假設上面的推論是對的，那麼要修復的方向就是：&lt;/p>
&lt;ol>
&lt;li>Unifi Console 格式化硬碟後，Network 不能正常啟動，淦！&lt;/li>
&lt;li>Unifi Console 格式化硬碟後，Protect 不能正常啟動，淦！&lt;/li>
&lt;/ol>
&lt;h3 id="unifi-console-格式化硬碟後network-不能正常啟動淦">Unifi Console 格式化硬碟後，Network 不能正常啟動，淦！&lt;/h3>
&lt;p>餵狗的關鍵字：&lt;code>unifi Network stopped&lt;/code>&lt;/p>
&lt;p>找到這則問題 &lt;a href="https://community.ui.com/questions/UniFi-Network-application-keeps-starting-and-stopping-cant-access-network-controls/fe0a201f-a01e-4684-9d29-0403724b17e7">UniFi &amp;ldquo;Network&amp;rdquo; application keeps starting &amp;amp; stopping - can&amp;rsquo;t access network controls&lt;/a>&lt;/p>
&lt;p>解法之一是開啟 Console 的 SSH 並連進去修復，就先試看看這招。&lt;/p>
&lt;h4 id="支線透過-ssh-進入-udr">支線：透過 SSH 進入 UDR&lt;/h4>
&lt;p>回到 Console Management，在 System 頁面的 Console Controls 區塊中，啟用 SSH 並設定密碼，請寄好這組密碼，等下會用到。&lt;/p>
&lt;p>在終端機透過 SSH client [1] 連線至 UDR，指令是 &lt;code>ssh root@${Unifi Console 的 IP}&lt;/code>，假如你的 Unifi Console 的 IP 是 &lt;code>192.168.168.1&lt;/code>，那就輸入 &lt;code>ssh root@192.168.168.1&lt;/code>。&lt;/p>
&lt;p>如果有正常連線的話，終端機會提示你輸入密碼，請輸入先前在 Console Controls 啟用 SSH 時所設定的密碼，密碼正確的話應該會出現下面的訊息：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">Linux Dream-Router 4.4.198-ui-mtk &lt;span style="color:#75715e">#1 SMP PREEMPT Mon Aug 1 14:25:10 CST 2022 aarch64&lt;/span>
Firmware version: v2.5.11
___ ___ .__________.__
| | |____ |__&lt;span style="color:#ae81ff">\_&lt;/span> ____/__|
| | / &lt;span style="color:#ae81ff">\|&lt;/span> &lt;span style="color:#f92672">||&lt;/span> __&lt;span style="color:#f92672">)&lt;/span> | | &lt;span style="color:#f92672">(&lt;/span>c&lt;span style="color:#f92672">)&lt;/span> 2010-2022
| | | | &lt;span style="color:#ae81ff">\ &lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#ae81ff">\ &lt;/span> | | Ubiquiti Inc.
|______|___| /__&lt;span style="color:#f92672">||&lt;/span>__/ |__|
|_/ https://www.ui.com
Welcome to UniFi Dream Router!
********************************* NOTICE **********************************
* By logging in to, accessing, or using any Ubiquiti product, you are *
* signifying that you have read our Terms of Service &lt;span style="color:#f92672">(&lt;/span>ToS&lt;span style="color:#f92672">)&lt;/span> and End User *
* License Agreement &lt;span style="color:#f92672">(&lt;/span>EULA&lt;span style="color:#f92672">)&lt;/span>, understand their terms, and agree to be *
* fully bound to them. The use of CLI &lt;span style="color:#f92672">(&lt;/span>Command Line Interface&lt;span style="color:#f92672">)&lt;/span> can *
* potentially harm Ubiquiti devices and result in lost access to them and *
* their data. By proceeding, you acknowledge that the use of CLI to *
* modify device&lt;span style="color:#f92672">(&lt;/span>s&lt;span style="color:#f92672">)&lt;/span> outside of their normal operational scope, or in any *
* manner inconsistent with the ToS or EULA, will permanently and *
* irrevocably void any applicable warranty. *
***************************************************************************
&lt;/code>&lt;/pre>&lt;/div>&lt;p>基本上就是問你 blah blah blah 你同不同意，當然是同意啦哪次不同意。&lt;/p>
&lt;p>好了我們終於進去一點點了，接下來可以開始修復 Network app 無法正常啟動的狀況。&lt;/p>
&lt;h4 id="修復-network-app-無法正常啟動的狀況">修復 Network app 無法正常啟動的狀況&lt;/h4>
&lt;p>根據文章的教學，下指令 &lt;code>apt-get upgrade&lt;/code>，跑完後會出現下面的訊息：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">root@Dream-Router:~# apt-get upgrade
Reading package lists... Done
Building dependency tree
Reading state information... Done
Calculating upgrade... Done
&lt;span style="color:#ae81ff">0&lt;/span> upgraded, &lt;span style="color:#ae81ff">0&lt;/span> newly installed, &lt;span style="color:#ae81ff">0&lt;/span> to remove and &lt;span style="color:#ae81ff">1&lt;/span> not upgraded.
&lt;/code>&lt;/pre>&lt;/div>&lt;p>回到 Console Management，在 Updates 頁面查看 Network app 的狀況，就發現他好了！狀態是 &lt;code>Up to Date&lt;/code>，嘗試打開 Network app，在電腦跟手機上都可以正常使用，太感動了&amp;hellip;&lt;/p>
&lt;h3 id="unifi-console-格式化硬碟後protect-不能正常啟動淦">Unifi Console 格式化硬碟後，Protect 不能正常啟動，淦！&lt;/h3>
&lt;p>修好了 Network 後，想說 Protect 是不是也順便修好了，但天不從人願QQ&lt;/p>
&lt;p>於是繼續餵狗，關鍵字：&lt;code>unifi protect stopped working&lt;/code>&lt;/p>
&lt;p>找到這則問題 &lt;a href="https://community.ui.com/questions/UniFi-Protect-stopped-working-after-uninitiated-update/22cfc8a7-f7d6-451d-a75a-c88ad2496fc3?page=1">UniFi Protect stopped working after uninitiated update&lt;/a>&lt;/p>
&lt;p>一樣透過 SSH client 連進去 UDR，開始玩耍。&lt;/p>
&lt;p>首先官方請提問者到 &lt;code>/srv/&lt;/code> 這個目錄撈 log 給他們，我也好奇的跑進去翻了一下XD&lt;/p>
&lt;p>&lt;code>unifi&lt;/code> 這個目錄下的 log 應該是 Network app 的，裡面可以看到 AP 的 logs。&lt;/p>
&lt;p>至於 Protect app 的 log 則是在 &lt;code>/srv/unifi-protect/logs&lt;/code> 這個目錄底下，裡面的 log 蠻值得挖出來看的，本質上跟 IoT 架構很類似，可以從 log 裡看出這些主從關係；另外有趣的是，我在 api.log 發現 &lt;code>/api/events&lt;/code> 這隻 api 的 payload 直接塞了一串 SQL query&amp;hellip;XD&lt;/p>
&lt;p>&lt;img src="http://blog.evance.tw/images/unifi-udr-loss-apps-after-reformat-sd-card/2022-09-29-01-45-07.png" alt="api payload 有 SQL query">&lt;/p>
&lt;p>扯遠了，繼續修。&lt;/p>
&lt;p>接著官方建議提問者下這段指令 &lt;code>apt-get update; apt-get install unifi-protect -y&lt;/code> ，我執行後的訊息如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">root@Dream-Router:~# apt-get update; apt-get install unifi-protect -y
Ign:1 http://deb.debian.org/debian stretch InRelease
Get:2 http://security.debian.org stretch/updates InRelease &lt;span style="color:#f92672">[&lt;/span>59.1 kB&lt;span style="color:#f92672">]&lt;/span>
Hit:3 http://deb.debian.org/debian stretch-updates InRelease
Hit:4 http://deb.debian.org/debian stretch-backports InRelease
Hit:5 http://deb.debian.org/debian stretch Release
Hit:6 https://apt.artifacts.ui.com stretch InRelease
Fetched 59.1 kB in 2s &lt;span style="color:#f92672">(&lt;/span>25.8 kB/s&lt;span style="color:#f92672">)&lt;/span>
Reading package lists... Done
Reading package lists... Done
Building dependency tree
Reading state information... Done
unifi-protect is already the newest version &lt;span style="color:#f92672">(&lt;/span>2.2.2&lt;span style="color:#f92672">)&lt;/span>.
&lt;span style="color:#ae81ff">0&lt;/span> upgraded, &lt;span style="color:#ae81ff">0&lt;/span> newly installed, &lt;span style="color:#ae81ff">0&lt;/span> to remove and &lt;span style="color:#ae81ff">1&lt;/span> not upgraded.
&lt;/code>&lt;/pre>&lt;/div>&lt;p>接著一樣回到 Console Management，在 Updates 頁面查看 Protect app 的狀況，發現他也好了~~&lt;/p>
&lt;p>從電腦、手機上分別確認 Protect app 的狀況，也都如預期般正常運行，夭壽讚！&lt;/p>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>沒事不要亂 format，Unifi Console 的 UI 扣 20 分，根本就誤導使用者。&lt;/p>
&lt;p>SSH 用完後記得關掉，沒要用就把門關好，不要開比較好。&lt;/p>
&lt;h2 id="refs">Refs&lt;/h2>
&lt;p>[1]: 我的 OS 是 Windows 10，使用的終端機是 powershell 4.0@Windows Terminal，安裝的 SSH client 是 OpenSSH client。&lt;/p></description></item><item><title>Hello My Macbook Pro</title><link>http://blog.evance.tw/posts/hello-my-macbook-pro/</link><pubDate>Thu, 06 Jan 2022 22:48:30 +0800</pubDate><guid>http://blog.evance.tw/posts/hello-my-macbook-pro/</guid><description>
&lt;h1 id="macbook">Macbook&lt;/h1>
&lt;h2 id="shortcut">shortcut&lt;/h2>
&lt;h3 id="common">common&lt;/h3>
&lt;p>大多數 app 通用，但還是要看 app 有沒有支援。&lt;/p>
&lt;ol>
&lt;li>command + t: new window&lt;/li>
&lt;li>command + w: close window&lt;/li>
&lt;li>command + q: exit process&lt;/li>
&lt;li>command + tab: change current window&lt;/li>
&lt;/ol>
&lt;h3 id="screen">screen&lt;/h3>
&lt;ol>
&lt;li>command + shift + 3: full screen&lt;/li>
&lt;li>command + shift + 4: custom mode
&lt;ol>
&lt;li>(in custom mode) space: specific window&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h2 id="homebrew">Homebrew&lt;/h2>
&lt;p>&lt;a href="https://brew.sh/index_zh-tw">https://brew.sh/index_zh-tw&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">/bin/bash -c &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="wget">wget&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">brew install wget
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="tree">tree&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">brew install tree
&lt;span style="color:#75715e"># 解決中文亂碼&lt;/span>
tree -N
&lt;span style="color:#75715e"># 印出特定層數&lt;/span>
tree -L &lt;span style="color:#ae81ff">3&lt;/span>
&lt;span style="color:#75715e"># 輸出 JSON - Prints out an JSON representation of the tree.&lt;/span>
tree -J
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="visual-studio-code">Visual Studio Code&lt;/h2>
&lt;ol>
&lt;li>command + k, then m: select language mode&lt;/li>
&lt;/ol>
&lt;h3 id="editer">editer&lt;/h3>
&lt;ol>
&lt;li>fn/(control + command + space): 顯示表情符號與其他符號&lt;/li>
&lt;li>（注）shift + option + b: 顯示標點符號選單&lt;/li>
&lt;li>（Ａ）shift + option + 英文字母: 輸入相對應的符號&lt;/li>
&lt;li>option + ←/→: 將游標往前/後跳一個詞&lt;/li>
&lt;li>（vs code）option + ↑/↓: 將當前行往上/下移動&lt;/li>
&lt;li>command + option + shift + ↑/↓: 將輸入游標往上/下延伸&lt;/li>
&lt;/ol>
&lt;h2 id="建置開發環境">建置開發環境&lt;/h2>
&lt;p>我的原始碼該放在哪裡呢？先來看看家目錄 &lt;code>~&lt;/code> 底下有什麼&lt;/p>
&lt;p>&lt;img src="http://blog.evance.tw/images/hello-my-macbook-pro/2022-01-19-02-08-02.png" alt="ImageDescription">&lt;/p>
&lt;p>家目錄底下看起來沒有適合擺放原始碼的目錄，於是我估狗了一下（搜尋： &lt;code>mac development folder&lt;/code>）&lt;/p>
&lt;p>發現似乎在某個版本以前的 macOS ，家目錄下預設就會有 &lt;code>Developer&lt;/code> 這個資料夾，不過我的 macbook (macOS Monterey) 的家目錄底下就已經沒有這個資料夾了。&lt;/p>
&lt;p>在 Windows OS 底下由於路徑長度的問題，我通常會將原始碼放在 &lt;code>c:\p&lt;/code> （&lt;code>p&lt;/code> 代表 project）底下，反而失去了使用者目錄 &lt;code>%USERPROFILE%&lt;/code> 的美意。（沒辦法啊 Windows 你就要用路徑長度來搞我）&lt;/p>
&lt;p>找到這篇文章，覺得作者建議的還不錯，他在家目錄下開了 &lt;code>dev&lt;/code> 這個資料夾，而在 Windows OS 也可以用同樣的邏輯，建立 &lt;code>c:\dev&lt;/code> 這個目錄。
&lt;a href="https://dev.to/httpjunkie/my-development-directory-structure-3p1g">https://dev.to/httpjunkie/my-development-directory-structure-3p1g&lt;/a>&lt;/p>
&lt;p>!!! info
在 linux 底下， &lt;code>/dev&lt;/code> 這個目錄代表的是 device 。&lt;/p>
&lt;p>建立開發目錄的語法如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">cd ~
mkdir -p dev/src/&lt;span style="color:#f92672">{&lt;/span>local,github&lt;span style="color:#f92672">}&lt;/span>
cd dev &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> tree -L &lt;span style="color:#ae81ff">3&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>tree -L 3&lt;/code> 的 output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">.
└── src
├── github
└── local
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="dotnet-60-sdk">dotnet 6.0 SDK&lt;/h2>
&lt;p>m1 = arm64 架構&lt;/p>
&lt;p>&lt;a href="https://dotnet.microsoft.com/en-us/download/dotnet/6.0">下載 .NET Core&lt;/a>&lt;/p>
&lt;ol>
&lt;li>macOS x Installers: Arm64&lt;/li>
&lt;li>All: dotnet-install scripts&lt;/li>
&lt;/ol>
&lt;h2 id="nvm--nodejs--yarn">nvm &amp;amp; node.js &amp;amp; yarn&lt;/h2>
&lt;h3 id="nvm">nvm&lt;/h3>
&lt;p>&lt;a href="https://github.com/nvm-sh/nvm#install--update-script">https://github.com/nvm-sh/nvm#install--update-script&lt;/a>&lt;/p>
&lt;p>開啟 terminal&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">cd ~
mkdir tmp
cd tmp
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
&lt;/code>&lt;/pre>&lt;/div>&lt;p>安裝完 nvm 後，執行下面的指令，設定 PATH&lt;/p>
&lt;pre>&lt;code>export NVM_DIR=&amp;quot;$HOME/.nvm&amp;quot;
[ -s &amp;quot;$NVM_DIR/nvm.sh&amp;quot; ] &amp;amp;&amp;amp; \. &amp;quot;$NVM_DIR/nvm.sh&amp;quot; # This loads nvm
&lt;/code>&lt;/pre>&lt;p>確認 nvm 是否安裝成功&lt;/p>
&lt;pre>&lt;code>nvm -v
&lt;/code>&lt;/pre>&lt;h3 id="nodejs-12">node.js 12&lt;/h3>
&lt;p>透過 nvm 安裝 node.js 12&lt;/p>
&lt;pre>&lt;code>nvm install 12
&lt;/code>&lt;/pre>&lt;p>確認安裝是否成功&lt;/p>
&lt;pre>&lt;code>node -v
npm -v
&lt;/code>&lt;/pre>&lt;h3 id="安裝-yarn">安裝 yarn&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">npm i -g yarn &lt;span style="color:#75715e">#if yarn isn&amp;#39;t installed&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Code Server 101</title><link>http://blog.evance.tw/posts/code-server-101/</link><pubDate>Wed, 05 Jan 2022 11:10:48 +0800</pubDate><guid>http://blog.evance.tw/posts/code-server-101/</guid><description>
&lt;p>版本&lt;/p>
&lt;ul>
&lt;li>OS: ubuntu&lt;/li>
&lt;li>docker: 20.10.7&lt;/li>
&lt;li>Code Server: 3.12.0&lt;/li>
&lt;/ul>
&lt;p>前置作業&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">cd ~
mkdir -p code-server/.config
mkdir -p code-server/project
cd code-server
touch docker-compose.yml
&lt;/code>&lt;/pre>&lt;/div>&lt;p>docker-compose.yml 的內容&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#f92672">version&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;2.1&amp;#34;&lt;/span>
&lt;span style="color:#f92672">services&lt;/span>:
&lt;span style="color:#f92672">code-server&lt;/span>:
&lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">codercom/code-server:3.12.0&lt;/span>
&lt;span style="color:#f92672">container_name&lt;/span>: &lt;span style="color:#ae81ff">code-server&lt;/span>
&lt;span style="color:#f92672">user&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;span style="color:#f92672">environment&lt;/span>:
- &lt;span style="color:#ae81ff">DOCKER_USER=root&lt;/span>
&lt;span style="color:#f92672">volumes&lt;/span>:
&lt;span style="color:#75715e"># 2022-01-05: 直接抄官方 docker hub 的範例，無法將 config.yml volume 出來；下面的路徑是調整過的。&lt;/span>
- &lt;span style="color:#ae81ff">~/code-server/.config:/root/.config/code-server&lt;/span>
- &lt;span style="color:#ae81ff">~/code-server/project:/home/coder/project&lt;/span>
&lt;span style="color:#f92672">ports&lt;/span>:
- &lt;span style="color:#ae81ff">8080&lt;/span>:&lt;span style="color:#ae81ff">8080&lt;/span>
&lt;span style="color:#f92672">restart&lt;/span>: &lt;span style="color:#ae81ff">unless-stopped&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>啟動&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">docker-compose up -d
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>About Creating a New Post With Hugo</title><link>http://blog.evance.tw/posts/about-creating-a-new-post-with-hugo/</link><pubDate>Sun, 07 Nov 2021 01:05:32 +0800</pubDate><guid>http://blog.evance.tw/posts/about-creating-a-new-post-with-hugo/</guid><description>
&lt;h2 id="這篇文章是怎麼產生的呢">這篇文章是怎麼產生的呢?&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">hugo new posts/about-creating-a-new-post-with-hugo.md
&lt;/code>&lt;/pre>&lt;/div>&lt;p>這篇文章所在的實體路徑為 &lt;code>~/content/posts/about-creating-a-new-post-with-hugo.md&lt;/code>&lt;/p>
&lt;p>檔案內容&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-md" data-lang="md">---
title: &amp;#34;About Creating a New Post With Hugo&amp;#34;
date: 2021-11-07T01:05:32+08:00
draft: true
---
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="檔案內容是怎麼來的">檔案內容是怎麼來的?&lt;/h2>
&lt;p>archetypes\default.md&lt;/p>
&lt;p>怎麼判斷要用這份的? &lt;a href="https://gohugo.io/content-management/archetypes/">link&lt;/a>&lt;/p>
&lt;ol>
&lt;li>archetypes/posts.md&lt;/li>
&lt;li>archetypes/default.md&lt;/li>
&lt;li>themes/&lt;code>&amp;lt;theme&amp;gt;&lt;/code>/archetypes/posts.md&lt;/li>
&lt;li>themes/&lt;code>&amp;lt;theme&amp;gt;&lt;/code>/archetypes/default.md&lt;/li>
&lt;/ol>
&lt;h2 id="怎麼在本機預覽這篇文章在-hugo-上會如何呈現呢">怎麼在本機預覽這篇文章在 hugo 上會如何呈現呢?&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">hugo server -D
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>-D&lt;/code> 代表可以在 hugo 上瀏覽 &lt;code>draft: true&lt;/code> 的文章&lt;/p>
&lt;h2 id="重新載了-hugo-blog-source-code-後該如何還原-theme-呢">重新載了 hugo blog source code 後，該如何還原 theme 呢？&lt;/h2>
&lt;p>在本機開發時， &lt;code>hugo server -D&lt;/code> 起來後卻是白畫面ＱＱ&lt;/p>
&lt;p>看起來是沒做 theme 的還原&lt;/p>
&lt;p>先前是透過 &lt;code>git submodule add https://github.com/chipzoller/hugo-clarity themes/hugo-clarity&lt;/code> 這個方式來安裝 theme&lt;/p>
&lt;p>安裝後，你可以查看 .gitmodules 這份檔案，裡頭會紀錄你載過的 submodule&lt;/p>
&lt;p>還原、更新 submodule 的語法如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">git submodule update
&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>