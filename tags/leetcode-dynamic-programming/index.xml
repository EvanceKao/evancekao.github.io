<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>leetcode-Dynamic Programming on My New Hugo Site</title><link>http://blog.evance.tw/tags/leetcode-dynamic-programming/</link><description>Recent content in leetcode-Dynamic Programming on My New Hugo Site</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><lastBuildDate>Sun, 22 Sep 2019 08:00:00 +0800</lastBuildDate><atom:link href="http://blog.evance.tw/tags/leetcode-dynamic-programming/index.xml" rel="self" type="application/rss+xml"/><item><title>0053 Maximum Subarray</title><link>http://blog.evance.tw/leetcode/0053-maximum-subarray/</link><pubDate>Sun, 22 Sep 2019 08:00:00 +0800</pubDate><guid>http://blog.evance.tw/leetcode/0053-maximum-subarray/</guid><description>
&lt;p>&lt;a href="https://leetcode.com/problems/maximum-subarray/">See Problem&lt;/a>&lt;/p>
&lt;h2 id="submission-detail">Submission Detail&lt;/h2>
&lt;p>Submitted: 2019/09/22&lt;/p>
&lt;p>Detail URL: &lt;a href="https://leetcode.com/submissions/detail/263206458/">https://leetcode.com/submissions/detail/263206458/&lt;/a>&lt;/p>
&lt;p>Runtime: Time Limit Exceeded&lt;/p>
&lt;p>Runtime Rank:&lt;/p>
&lt;p>Memory Usage:&lt;/p>
&lt;p>Memory Usage Rank:&lt;/p>
&lt;h2 id="problem-solving-mode-of-mind">Problem Solving Mode of Mind&lt;/h2>
&lt;h3 id="english">English&lt;/h3>
&lt;h3 id="繁體中文">繁體中文&lt;/h3>
&lt;h2 id="submitted-code">Submitted Code&lt;/h2>
&lt;p>Language: csharp&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Solution&lt;/span> {
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> MaxSubArray(&lt;span style="color:#66d9ef">int&lt;/span>[] nums) {
&lt;span style="color:#66d9ef">if&lt;/span> (nums.Length == &lt;span style="color:#ae81ff">1&lt;/span>)
&lt;span style="color:#66d9ef">return&lt;/span> nums[&lt;span style="color:#ae81ff">0&lt;/span>];
Console.WriteLine(&lt;span style="color:#e6db74">$&amp;#34;l: {nums.Length}&amp;#34;&lt;/span>);
&lt;span style="color:#66d9ef">var&lt;/span> max = &lt;span style="color:#66d9ef">int&lt;/span>.MinValue;
&lt;span style="color:#66d9ef">var&lt;/span> previous = &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;span style="color:#66d9ef">var&lt;/span> dict = &lt;span style="color:#66d9ef">new&lt;/span> Dictionary&amp;lt;&lt;span style="color:#66d9ef">int&lt;/span>, &lt;span style="color:#66d9ef">int&lt;/span>&amp;gt;();
&lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">var&lt;/span> i = &lt;span style="color:#ae81ff">0&lt;/span>; i &amp;lt; nums.Length; i++)
{
dict[i] = (previous += nums[i]);
&lt;span style="color:#66d9ef">if&lt;/span> (dict[i] &amp;gt; max)
max = dict[i];
}
&lt;span style="color:#66d9ef">var&lt;/span> previousSum = nums[&lt;span style="color:#ae81ff">0&lt;/span>];
&lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">var&lt;/span> i = &lt;span style="color:#ae81ff">1&lt;/span>; i &amp;lt; nums.Length; i++)
{
&lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">var&lt;/span> j = i; j &amp;lt; nums.Length; j++)
{
&lt;span style="color:#66d9ef">if&lt;/span> (dict[j] - previousSum &amp;gt; max)
max = dict[j] - previousSum;
}
previousSum += nums[i];
}
&lt;span style="color:#66d9ef">return&lt;/span> max;
}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;hr></description></item></channel></rss>